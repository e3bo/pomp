_N_e_w_s _f_o_r _p_a_c_k_a_g_e '_p_o_m_p'

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_4._2:

        • A new ‘dmultinom’ function is provided in ‘pomp.h’.  This
          provides the probability distribution function for the
          multinomial distribution.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_4._1:

        • Improved tests.

        • Fixed bugs emerging in R-devel due to refactoring of
          underlying R source code.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_3._4:

        • Eamon O'Dea pointed out that the bug in ‘gillespie.sim’,
          addressed by version 1.12.3, was not completely fixed.  This
          problem has now been resolved.  In addition, covariates are
          now guaranteed to be evaluated at least once per observation
          interval.

        • The new argument ‘hmax’ to ‘gillespie.sim’ allows the user to
          specify the maximum step size that will be taken before
          covariates are evaluated.

        • The K-leap method has been removed.  Its accuracy is low on
          test problems and it is difficult to make it compatible with
          the pomp paradigm.  In particular, it does not readily
          accomodate time-varying covariates in a sensible way, nor
          does it lend itself to simulations at pre-specified times.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_3._3:

        • ‘bspline.basis’ and ‘periodic.bspline.basis’ now take an
          optional non-negative integer argument ‘deriv’.  When ‘deriv
          > 0’, the order-‘deriv’ derivative of each basis function is
          returned.

        • A new function, ‘periodic_bspline_basis_eval_deriv’, has been
          added to the C API.  This function gives access, at the C
          level, to evaluation of the derivatives of periodic
          B-splines.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_3._2:

        • Upgrade license to GPL version 3.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_3._1:

        • Fix buffer-flow problem identified by ‘valgrind’.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_2._3:

        • Fix bug found by Eamon O'Dea in ‘gillespie.sim’.

        • Fix bug in ‘onestep.sim’.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_2._2:

        • The Ricker example has a new parameter, c, which scales the
          (unobserved) population size.  By default, c=1, so that the
          behavior is as before.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_2._1:

        • Improved error trapping.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_1._3:

        • Some changes have been made to the use of random numbers in
          some codes (the stochastic simulations in ‘gillespie.sim’ and
          the resampling in the particle-filtering codes).  These
          changes will mean that calculations performed before will not
          be reproducible in perfect detail, but will be statistically
          equivalent.

        • Minor changes in C codes to obviate warnings generated by T.
          Kalibera's ‘rchk’ checks.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_1._2:

        • The rare and fascinating “Bug of St. Patrick” has been fixed.
          Thanks to Carles Breto for finding the bug and helping to
          isolate it.

        • More informative error messages are generated when ‘dmeasure’
          returns a non-finite likelihood in any of the particle
          filtering codes.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_1._1:

        • Some streamlining of codes.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_0._6:

        • Callable routines are now registered.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_0._5:

        • More verbosity is provided with ‘verbose=TRUE’.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_0._4:

        • The functions ‘bake’, ‘stew’, and ‘freeze’ now preserve
          information about the system time used in computation as an
          attribute of the returned object.  In addition, these
          functions store information about the RNG settings.

        • Some documentation improvements, courtesy of Sebastian Funk.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_0._3:

        • Documentation improvements.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_0._2:

        • More verbosity in building of Csnippets.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1_0._1:

        • Better handling of ‘pomp’'s ‘times’ argument.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._9._3:

        • New ‘logLik’ method for ‘pmcmcList’ objects.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._9._2:

        • The deprecated options to supply a matrix or numeric vector
          as the ‘data’ argument to ‘pomp’ have been removed and doing
          so now generates an error.  The first argument to ‘pomp’,
          ‘data’, must now be provided either as a data frame or as an
          object of class ‘pomp’.  See ‘?pomp’ for details.

        • The deprecated ‘skeleton.type’ and ‘skelmap.delta.t’
          arguments to ‘pomp’ have been removed.  Using these arguments
          will now generate an error message.  The correct method of
          specifying the deterministic skeleton is now explained in the
          help pages (‘?pomp’).

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._9._1:

        • Source code fixes to eliminate warnings during compilation.

        • Improved test suite.

        • Minor documentation correction.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._8._1_1:

        • During particle filtering, when non-finite ‘dmeasure’ values
          are generated, an error is generated and the offending
          parameters, states, data, and time are reported.  In methods
          that use parameter transformations (‘transform=TRUE’), the
          reported parameters were on the transformed (estimation)
          scale, which can be confusing.  The error message now gives
          the parameters on the natural (model) scale.

        • Modified ‘src/ssa.c’ to fix UBSAN errors.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._8._1_0:

        • C codes have been modified to take advantage of changes to
          the R API (R SVN REVISION 71180).

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._8._9:

        • A bug in ‘mif2’ arising when filtering fails in the final
          timestep has been fixed.  In this case, when all particles
          are deemed inconsistent with the data, we use an unweighted
          mean (with a warning) in place of the default weighted mean.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._7._7:

        • The stochastic simulation algorithms underlying the Gillespie
          and K-leap methods (‘gillespie.sim’, ‘kleap.sim’) have been
          refactored in C.  In addition, errors due to accumulation of
          round-off error have been repaired.  The result will be more
          accurate, but somewhat slower when there are a very large
          number of reactions.

        • Further improvements to the test suite.  Code coverage is now
          100%.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._7._6:

        • In Sobol' sequence generation (‘sobolDesign’,
          ‘profileDesign’), we now use the suggestion of Joe & Kuo
          (2003) to choose a better sequence start point.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._7._5:

        • The generation of Sobol' sequences (‘sobolDesign’,
          ‘profileDesign’) is now performed using the ‘NLopt’ routines
          written in C instead of the original TOMS 659 FORTRAN codes.
          The copyright notices are located in the source code.

        • Improved testing suite.

        • Made ‘rw.sd’ even more robust via new ‘safecall’ class.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._7._4:

        • Refactored ‘rw.sd’ for greater stability.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._7._3:

        • Fixed a bug in ‘plot’ on ‘pomp’ objects with more than 10
          variables to plot.

        • Added the ‘shlib.args’ option to ‘pomp’, allowing arbitrary
          options to be passed to the compiler when C snippets are
          used.

        • Modified the “dacca” example to use C snippets.

        • Refactored ‘rw.sd’ for greater stability.

        • Made Sobol' codes more robust.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._7._2:

        • Modified the demos to use best practices.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._7._1:

        • Improved the test suite.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._6._7:

        • Improve the test suite and error messages.

        • Replace the automatic “verbose” setting during compilation
          under Windows.  This was dropped in version 1.6.4.3, when it
          no longer appeared to be necessary.  Apparently, it is, at
          least under some Windows OS/R combinations.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._6._6:

        • Fix ‘probe’ bug introduced in version 1.6.5.9.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._6._5:

        • Several obscure bug-fixes.

        • Improvement of the test suite and of error messages.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._6._4:

        • Remove the automatic “verbose” setting during compilation
          under Windows.  This was introduced in version 0.63-6 as a
          workaround.  It appears no longer to be necessary.

        • Improve the ‘show’ method for ‘pomp’ objects.

        • Change the ‘print’ method for ‘pomp’ objects.

        • Improve messages for plugin errors.

        • Some internal refactoring.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._6._3:

        • Improve error messages for missing basic components.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._6._2:

        • Fix typos in one of the help-page examples.

        • Add some references.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._6._1:

        • Major revisions to the package help pages and manual.  The
          separate documentation on C snippets and process-model
          plugins has been merged into the main ‘pomp’ help page, which
          now has comprehensive instructions on building a ‘pomp’
          object.

        • Update to the package help page.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._5._1_0:

        • The matrix and numeric vector options for the ‘data’ argument
          to ‘pomp’ are now deprecated and will be removed in a future
          release.  In calls to ‘pomp’, ‘data’ should be either a data
          frame or a ‘pomp’-class object.

        • Many more errors are now trapped and reported with more
          informative messages.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._5._9:

        • Redundant ‘bootstrap’ argument to ‘nlf’ has been removed.

        • More improvements to the testing suite.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._5._8:

        • Major improvements to error and warning handling.

        • Fix bugs that might arise in rare circumstances in ‘simulate’
          and ‘eulermultinom’ functions.

        • More improvements to the testing suite.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._5._7:

        • Many improvements to the test suite.

        • Fixed a bug in ‘pompExample’.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._5._6:

        • Major overhaul of error handling system and error messages.

        • There is a new plugin for ‘rprocess’ called ‘kleap.sim’.
          This implements the so-called “K-leap method” of Cai & Xu
          (2007).

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._5._5:

        • Many improvements to the test suite.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._5._4:

        • More improvements to the test suite.

        • Fixed bugs found as a result of improved testing.

        • In ‘mif2’, it is now required that ‘Nmif>0’.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._5._3:

        • More improvements to the test suite.

        • Fixed bugs found as a result of improved testing.

        • Fixed bug in specification of skeleton in pompExamples.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._5._2:

        • Improved the test suite to obtain better code coverage.

        • ‘pomp’ is no longer an S4 method.  Its new status as an
          ordinary function abbreviates and consolidates the code and
          simplifies the documentation.

        • Some minor improvements to error messages.

        • A bug restricting access in C code to ‘userdata’ has been
          fixed.

        • Fixed bug in ‘pompExample(...,show=TRUE)’.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._5._1:

        • New methods for the Ensemble Kalman Filter (‘enkf’) and
          Ensemble Adjustment Kalman Filter (‘eakf’) have been added to
          the package.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._4._9:

        • A better interface for specifying a model's deterministic
          skeleton is provided.  One specifies
          ‘skeleton=map(f,delta.t)’ for a discrete-time skeleton (a
          map) and ‘skeleton=vectorfield(f)’ for a continuous-time
          skeleton (a vectorfield).  The old arguments ‘skeleton.type’
          and ‘skelmap.delta.t’ are deprecated and will be removed in a
          future release.

        • The ‘pfilter’ help page has been improved.  Specifically, the
          discussion of filtering failures is better.

        • Miscellaneous improvements to the help pages.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._4._8:

        • ‘mif2’ no longer computes filter means.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._4._7:

        • The new argument ‘show’ of ‘pompExamples’ allows one to
          display the example code instead of executing it.

        • The minimum version of R supported is now 3.1.2.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._4._6:

        • ‘init.state’ now has the optional argument ‘nsim’.  Using
          this, one can request multiple initial state vectors per
          parameter vector.

        • ‘pfilter’ now uses less memory when it is asked to run at a
          single point in parameter space.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._4._5:

        • A bug associated with the ‘rw.sd’ argument to ‘mif2’ on
          Windows platforms has been fixed.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._4._4:

        • The ‘method="mif2"’ option to ‘mif’ has been removed.  Use
          ‘mif2’ instead.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._4._3:

        • The ‘particles’ method (rarely if ever used), has been
          removed to streamline the ‘mif’ codes.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._4._2:

        • The ‘method="mif2"’ option to ‘mif’ is now deprecated.  It
          will be removed in a future release.  Use ‘mif2’ instead.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._4._1:

        • Following the publication of the Journal of Statistical
          Software announcement paper, the ‘CITATION’ has been modified
          to include the appropriate citation.  Please use
          ‘citation("pomp")’ to learn about how to cite ‘pomp’
          correctly.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._3._4:

        • ‘conv.rec’ on the results of a ‘mif2’ computation now play
          nicely with ‘reshape2::melt’.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._3._3:

        • It is now possible to direct ‘pomp’ to place ‘Csnippet’ codes
          in a specified location.  This is accomplished via the new
          ‘cdir’ and ‘cfile’ arguments to ‘pomp’.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._3._2:

        • When several concurrent R processes attempt to simultaneously
          compile ‘Csnipet’ code from copies of a ‘pomp’ object on the
          same machine, a race condition exists.  This release fixes
          this by ensuring that ‘Csnippet’ codes are written and
          compiled in a process-specific directory.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._3._1:

     This release removes several long-deprecated features.

        • The ‘seed’ argument to ‘pfilter’ has been removed.  Use
          ‘freeze’ to obtain similar functionality.

        • The redundant ‘pars’ argument to ‘mif’ has been removed.
          Names of parameters to be estimated are taken from the
          nonzero entries of ‘rw.sd’.  Initial-value parameters are
          designated using the ‘ivps’ argument.

        • The old ‘parameter.transform’ and ‘parameter.inv.transform’
          arguments to ‘pomp’ have been removed.  They were superseded
          by the arguments ‘fromEstimationScale’ and
          ‘toEstimationScale’ in version 0.65-1.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._2._2:

        • Some internal changes to ‘mif2’ by C. Breto, in support of
          panel methods under development.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._2._1:

        • Bug fix: for POMPs with a scalar state variable, the
          ‘filter.mean’, ‘pred.mean’, and ‘pred.var’ methods dropped
          the singleton dimension of the respective arrays, in conflict
          with the assumptions of certain ‘plot’ methods.  This
          resolves issue #3.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1._4:

        • Documentation improvements.  Specifically, the details of how
          step-sizes are chosen in the ‘euler.sim’,
          ‘discrete.time.sim’, and ‘onestep.sim’ plugins has been
          spelled out explicitly.  Also, incompleteness in the
          ‘sannbox’ documentation has been corrected.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1._3:

        • Provide ‘filter.traj’ method for ‘pmcmcList’ objects.

_C_h_a_n_g_e_s _i_n '_p_o_m_p' _v_e_r_s_i_o_n _1._1._2:

        • Fixed a bug in ‘mif’ and ‘mif2’ when
          ‘cooling.type="hyperbolic"’ and ‘cooling.fraction.50=1’.

